Chocolate Distribution

Problem Description:  The function accepts an integer array ‘arr’ of size ‘n’ as its argument. Each element of ‘arr’ represents the number of chocolates distributed to a person. The function needs to return the minimum number of chocolates that need to be distributed to each person so that the difference between the chocolates of any two people is minimized.
Input:
n: 5
arr: 10 4 12 3 1
Output:
3

Program:

import java.util.*;
public class test{
public static void main(String[] args){
    Scanner sc=new Scanner(System.in);
    int n=sc.nextInt();
    int[] arr=new int[n];
    for(int i=0;i<n;i++){
        arr[i]=sc.nextInt();
    }
    chocolate(n,arr);
    }
    public static void chocolate(int n,int[] arr){
        int m=3;//subset count of arr
        Arrays.sort(arr);
        int mindiff=arr[n-1];
        for(int i=0;i+m-1<n;i++){
            int diff=arr[i+m-1]-arr[i];
            if(diff<mindiff){
                mindiff=diff;
            }
        }
        System.out.println(mindiff);
    }
}
